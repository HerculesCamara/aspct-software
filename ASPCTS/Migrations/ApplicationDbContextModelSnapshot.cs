// <auto-generated />
using System;
using ASPCTS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPCTS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASPCTS.Models.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Concluida")
                        .HasColumnType("bit");

                    b.Property<int>("CriancaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PsicologoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriancaId");

                    b.HasIndex("PsicologoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("ASPCTS.Models.Crianca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataNascimento")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MaeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaiId")
                        .HasColumnType("int");

                    b.Property<int>("PsicologoId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaeId");

                    b.HasIndex("PaiId");

                    b.HasIndex("PsicologoId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Criancas");
                });

            modelBuilder.Entity("ASPCTS.Models.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CriancaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarcosAlcancados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecomendacoesCasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecomendacoesEscola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriancaId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("ASPCTS.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataNascimento")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator<string>("Tipo").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ASPCTS.Models.Psicologo", b =>
                {
                    b.HasBaseType("ASPCTS.Models.Usuario");

                    b.Property<string>("CRP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Psicologo");
                });

            modelBuilder.Entity("ASPCTS.Models.Responsavel", b =>
                {
                    b.HasBaseType("ASPCTS.Models.Usuario");

                    b.Property<int?>("PsicologoId")
                        .HasColumnType("int");

                    b.HasIndex("PsicologoId");

                    b.HasDiscriminator().HasValue("Responsavel");
                });

            modelBuilder.Entity("ASPCTS.Models.Atividade", b =>
                {
                    b.HasOne("ASPCTS.Models.Crianca", "Crianca")
                        .WithMany("Atividades")
                        .HasForeignKey("CriancaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ASPCTS.Models.Psicologo", "Psicologo")
                        .WithMany()
                        .HasForeignKey("PsicologoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crianca");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("ASPCTS.Models.Crianca", b =>
                {
                    b.HasOne("ASPCTS.Models.Responsavel", "Mae")
                        .WithMany()
                        .HasForeignKey("MaeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ASPCTS.Models.Responsavel", "Pai")
                        .WithMany()
                        .HasForeignKey("PaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ASPCTS.Models.Psicologo", "Psicologo")
                        .WithMany("Criancas")
                        .HasForeignKey("PsicologoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ASPCTS.Models.Responsavel", null)
                        .WithMany("Criancas")
                        .HasForeignKey("ResponsavelId");

                    b.Navigation("Mae");

                    b.Navigation("Pai");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("ASPCTS.Models.Relatorio", b =>
                {
                    b.HasOne("ASPCTS.Models.Crianca", "Crianca")
                        .WithMany()
                        .HasForeignKey("CriancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crianca");
                });

            modelBuilder.Entity("ASPCTS.Models.Responsavel", b =>
                {
                    b.HasOne("ASPCTS.Models.Psicologo", "Psicologo")
                        .WithMany()
                        .HasForeignKey("PsicologoId");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("ASPCTS.Models.Crianca", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("ASPCTS.Models.Psicologo", b =>
                {
                    b.Navigation("Criancas");
                });

            modelBuilder.Entity("ASPCTS.Models.Responsavel", b =>
                {
                    b.Navigation("Criancas");
                });
#pragma warning restore 612, 618
        }
    }
}
